Microsoft (R) Macro Assembler Version 6.14.8444		    04/28/21 18:48:52
a.asm							     Page 1 - 1


				include console.inc
			      C .NOLIST
			      C .LIST
			      C ; »ÒÍÎ˛˜ÂÌËÂ ËÁ ÒÔËÒÍ‡ ÒÎÛÊÂ·Ì˚ı ÒÎÓ‚
			      C option NoKeyWord: <c name str>
			      C 
			      C 
			      C 
			      C ;include masm32.inc
			      C 
			      C    includelib masm32.lib
			      C    includelib user32.lib
			      C    includelib kernel32.lib
			      C    includelib msvcrt.lib
			      C    includelib io_proc.lib
			      C    
			      C 
				    
 = 000001FF			    Max_Len equ 511
 = 000000F1			    rus_letter_yo_lower equ 241
 = 00000080			    rus_letter_A_Upper equ 128
 = 000000F0			    rus_letter_yo_Upper equ 240
 = 0000009F			    rus_letter_ya_Upper equ 159
 = 000000AF			    rus_letter_p_lower equ 175
 = 000000E0			    rus_letter_r_lower equ 224
 = 00000099			    rus_letter_shc_Upper equ 153
 = 00000085			    rus_letter_ye_Upper equ 133

 00000019			.data
 00000019  000003FE [		    Arr_1 db 2*Max_Len dup (0) ;–ø–µ—Ä–≤—ã–π —Ç–µ–∫—Å—Ç
	    00
	   ]
 00000417  000003FE [		    Arr_2 db 2*Max_Len dup (0) ;–≤—Ç–æ—Ä–æ–π —Ç–µ–∫—Å—Ç
	    00
	   ]
 00000815  00000100 [		    Arr_U db 256 dup (0)       ;–º–∞—Å—Å–∏–≤ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤
	    00
	   ]
 00000915 0000			    Arr_Len_1 dw ?             ;–¥–ª–∏–Ω–∞ –ø–µ—Ä–≤–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
 00000917 0000			    Arr_Len_2 dw ?             ;–¥–ª–∏–Ω–∞ –≤—Ç–æ—Ä–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
 00000919 0000			    Arr_Un_1 dw ?              ;–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤ –≤ 1 —Ç–µ–∫—Å—Ç–µ
 0000091B 0000			    Arr_Un_2 dw ?              ;–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤ –≤–æ 2 —Ç–µ–∫—Å—Ç–µ

 00000000			.code

				;–í–≤–æ–¥ –º–∞—Å—Å–∏–≤–∞
				;–ù–∞ –≤—Ö–æ–¥ –ø–æ–¥–∞—ë—Ç—Å—è –∞–¥—Ä–µ—Å –Ω–∞—á–∞–ª–∞ –º–∞—Å—Å–∏–≤–∞
				;–Ω–∞ eax —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ —É—Å–ª–æ–≤–∏—é

 00000000			Array_Input proc
 00000000  55			    push ebp
 00000001  8B EC		    mov ebp, esp
 00000003  52			    push edx
 00000004  53			    push ebx
 00000005  8B 5D 08		    mov ebx, [ebp + 8]
 00000008  33 C0		    xor eax, eax
 0000000A  33 C9		    xor ecx, ecx
 0000000C  33 D2		    xor edx, edx
				    
 0000000E			Array_Input_Begin:
				    inchar al
 0000002E  83 FA 01		    cmp edx, 1
 00000031  74 0C		    je Array_Input_Length_Check

 00000033  3C 5C		    cmp al, '\'
 00000035  0F 84 000000C2	    je Array_Input_Slash

 0000003B  3C 5F		    cmp al, '_'
 0000003D  74 17		    je Array_Input_First_Exit_Symbol
				    
 0000003F			Array_Input_Length_Check:
 0000003F  BA 00000000		    mov edx, 0
 00000044  81 F9 000001FF	    cmp ecx, Max_Len
 0000004A  0F 83 000000C0	    jae Array_Input_Not_Text
 00000050  41			    inc ecx
 00000051  88 03		    mov byte ptr [ebx], al
 00000053  43			    inc ebx
 00000054  EB B8		    jmp Array_Input_Begin

 00000056			Array_Input_First_Exit_Symbol:
				    inchar al
 00000076  3C 40		    cmp al, '@'
 00000078  74 1C		    je Array_Input_Second_Exit_Symbol
 0000007A  BA 00000000		    mov edx, 0
 0000007F  41			    inc ecx
 00000080  81 F9 000001FF	    cmp ecx, Max_Len
 00000086  0F 84 00000084	    je Array_Input_Not_Text
 0000008C  C6 03 5F		    mov byte ptr [ebx], '_'
 0000008F  43			    inc ebx
 00000090  3C 5C		    cmp al, '\'
 00000092  74 69		    je Array_Input_Slash
 00000094  EB A9		    jmp Array_Input_Length_Check
				    
 00000096			Array_Input_Second_Exit_Symbol:
				    inchar al
 000000B6  3C 5F		    cmp al, '_'
 000000B8  74 1A		    je Array_Input_Exit_Symbols
 000000BA  83 C1 01		    add ecx, 1
 000000BD  81 F9 000001FF	    cmp ecx, Max_Len
 000000C3  74 4B		    je Array_Input_Not_Text
 000000C5  C6 03 5F		    mov byte ptr [ebx], '_'
 000000C8  43			    inc ebx
 000000C9  41			    inc ecx
 000000CA  C6 03 40		    mov byte ptr [ebx], '@'
 000000CD  43			    inc ebx
 000000CE  41			    inc ecx
 000000CF  E9 FFFFFF6B		    jmp Array_Input_Length_Check

 000000D4			Array_Input_Exit_Symbols:
 000000D4  83 FA 00		    cmp edx, 0
 000000D7  74 18		    je Array_Input_Next
 000000D9  83 C1 03		    add ecx,3
 000000DC  C6 03 5F		    mov byte ptr [ebx], '_'
 000000DF  C6 43 01 40		    mov byte ptr [ebx + 1], '@'
 000000E3  C6 43 02 5F		    mov byte ptr [ebx + 2], '_'
 000000E7  83 C3 03		    add ebx, 3
 000000EA  33 D2		    xor edx, edx
 000000EC  E9 FFFFFF1D		    jmp Array_Input_Begin
				    
 000000F1			Array_Input_Next:	
 000000F1  83 F9 00		    cmp ecx, 0
 000000F4  74 1A		    je Array_Input_Not_Text
 000000F6  B8 00000001		    mov eax, 1 ; —Ç–µ–∫—Å—Ç
 000000FB  EB 18		    jmp Array_Input_Exit

 000000FD			Array_Input_Slash:
 000000FD  83 FA 01		    cmp edx, 1
 00000100  0F 84 FFFFFF39	    je Array_Input_Length_Check
 00000106  BA 00000001		    mov edx, 1 ; –±—ã–ª –≤–≤–µ–¥—ë–Ω —Å–ª—ç—à
 0000010B  E9 FFFFFEFE		    jmp Array_Input_Begin

 00000110			Array_Input_Not_Text:
 00000110  B8 00000000		    mov eax, 0

 00000115			Array_Input_Exit:
 00000115  5A			    pop edx
 00000116  5B			    pop ebx
 00000117  5D			    pop ebp
 00000118  C2 0004		    ret 4
 0000011B			Array_Input endp

				;–í—ã–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞ 
				;–Ω–∞ –≤—Ö–æ–¥ –ø–æ–¥–∞—ë—Ç—Å—è –∞–¥—Ä–µ—Å –Ω–∞—á–∞–ª–∞ –º–∞—Å—Å–∏–≤–∞

 0000011B			Array_Output proc

 0000011B  55			    push ebp
 0000011C  8B EC		    mov ebp, esp
 0000011E  8B 5D 08		    mov ebx, [ebp + 8]

				    outstrln '"""'

 000001CB			Array_Output_Start:
 000001CB  33 C0		    xor eax, eax
 000001CD  8B 03		    mov eax, [ebx]
 000001CF  83 F8 00		    cmp eax, 0 ;–ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ —Å–∏–º–≤–æ–ª –∫–æ–Ω—Ü–∞ —Ç–µ–∫—Å—Ç–∞
 000001D2  74 75		    je Array_Output_End

 000001D4  EB 00		    jmp Array_Output_Next

 000001D6			Array_Output_Next:
				    ConsoleMode
				    outchar al
				    ConsoleMode
 00000246  43			    inc ebx
 00000247  EB 82		    jmp Array_Output_Start

 00000249			Array_Output_End:
				    newline
				    outstrln '"""'
				    
 0000035F  5D			    pop ebp
 00000360  C2 0004		    ret 4

 00000363			Array_Output endp

				; –ü—Ä–æ—Ü–µ–¥—É—Ä–∞ –ø–æ–¥—Å—á–µ—Ç–∞ –¥–ª–∏–Ω—ã —Ç–µ–∫—Å—Ç–∞ (—É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤)
				; –†–µ–∑—É–ª—å—Ç–∞—Ç –Ω–∞ ax

 00000363			Array_Count_Len proc
 00000363  55			    push ebp
 00000364  8B EC		    mov ebp,esp
 00000366  53			    push ebx
 00000367  51			    push ecx
 00000368  52			    push edx
 00000369  57			    push edi
 0000036A  8B 5D 08		    mov ebx, [ebp + 8] ; –∞–¥—Ä–µ—Å –Ω–∞—á–∞–ª–∞ –º–∞—Å—Å–∏–≤–∞
 0000036D  66| 8B 4D 0C		    mov cx, [ebp + 12] ; –¥–ª–∏–Ω–∞ –º–∞—Å—Å–∏–≤–∞
				    
 00000371  33 D2		    xor edx, edx

 00000373			Array_Count_Begin: 
 00000373  8A 03		    mov al, byte ptr [ebx]
 00000375  3C 0A		    cmp al, 10
 00000377  74 0A		    je Array_Count_Next
 00000379  3C 0D		    cmp al, 13
 0000037B  74 06		    je Array_Count_Next
 0000037D  FE 80 00000815 R	    inc Arr_U[eax]

 00000383			Array_Count_Next:	
 00000383  43			    inc ebx
 00000384  66| 42		    inc dx
 00000386  66| 3B D1		    cmp dx, cx
 00000389  72 E8		    jb Array_Count_Begin
 0000038B  33 D2		    xor edx, edx

 0000038D			Array_Count_Symbols: 
 0000038D  80 BA 00000815 R	    cmp Arr_U[edx], 0
	   00
 00000394  74 02		    je Array_Count_Check
 00000396  66| 47		    inc di

 00000398			Array_Count_Check:
 00000398  42			    inc edx
 00000399  81 FA 00000100	    cmp edx, 256
 0000039F  72 EC		    jb Array_Count_Symbols
				    
 000003A1  33 DB		    xor ebx, ebx  
 000003A3			Array_Count_Set_Zero: 
 000003A3  C6 83 00000815 R	    mov Arr_U[ebx], 0
	   00
 000003AA  43			    inc ebx
 000003AB  81 FB 00000100	    cmp ebx, 256
 000003B1  72 F0		    jb Array_Count_Set_Zero

 000003B3  66| 8B C7		    mov ax, di 
 000003B6  5F			    pop edi
 000003B7  5A			    pop edx
 000003B8  59			    pop ecx
 000003B9  5B			    pop ebx
 000003BA  5D			    pop ebp
 000003BB  C2 0008		    ret 8
				    
 000003BE			Array_Count_Len endp

				;–ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞
				;1) –∑–∞–º–µ–Ω–∏—Ç—å –ª–∞—Ç–∏–Ω—Å–∫—É—é –±—É–∫–≤—É —Å–∏–º–º–µ—Ç—Ä–∏—á–Ω–æ–π
				;–ù–∞ –≤—Ö–æ–¥ –ø–æ–¥–∞—ë—Ç—Å—è –∞–¥—Ä–µ—Å –Ω–∞—á–∞–ª–∞ –º–∞—Å—Å–∏–≤–∞

 000003BE			Text_Conv_First proc

 000003BE  55			    push ebp
 000003BF  8B EC		    mov ebp, esp
 000003C1  8B 5D 08		    mov ebx, [ebp + 8]

 000003C4			Text_Conv_First_Start:
 000003C4  33 C0		    xor eax, eax
 000003C6  8B 03		    mov eax, [ebx]
				    
 000003C8  3C 00		    cmp al, 0 ; –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ —Å–∏–º–≤–æ–ª –∫–æ–Ω—Ü–∞ —Ç–µ–∫—Å—Ç–∞
 000003CA  0F 84 000000C4	    je Text_Conv_First_End

 000003D0  3C 41		    cmp al, 'A'
 000003D2  0F 82 000000B6	    jb Text_Conv_First_Skip
				    
 000003D8  3C F1		    cmp al, 241
 000003DA  0F 87 000000AE	    ja Text_Conv_First_Skip

 000003E0  3C 5A		    cmp al, 'Z'
 000003E2  77 02		    ja Text_Conv_First_Check1
 000003E4  EB 36		    jmp Text_Conv_First_Change_Upper_ENG

				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

 000003E6			Text_Conv_First_Check1:

 000003E6  3C 61		    cmp al, 'a'
 000003E8  0F 82 000000A0	    jb Text_Conv_First_Skip
				    
 000003EE  3C 7A		    cmp al, 'z'
 000003F0  77 02		    ja Text_Conv_First_Check2
 000003F2  EB 32		    jmp Text_Conv_First_Change_Lower_ENG

 000003F4			Text_Conv_First_Check2:

 000003F4  3C 80		    cmp al, rus_letter_A_Upper
 000003F6  0F 82 00000092	    jb Text_Conv_First_Skip
				    
 000003FC  3C AF		    cmp al, 175
 000003FE  0F 84 0000008A	    je Text_Conv_First_Skip

 00000404  3C F1		    cmp al, 241
 00000406  74 56		    je Text_Conv_First_Change_Lower_RUS
				    
 00000408  3C F0		    cmp al, 240
 0000040A  74 24		    je Text_Conv_First_Change_Upper_RUS

 0000040C  3C 9F		    cmp al, rus_letter_ya_Upper
 0000040E  77 02		    ja Text_Conv_First_Check3
 00000410  EB 1E		    jmp Text_Conv_First_Change_Upper_RUS

 00000412			Text_Conv_First_Check3:

 00000412  3C AF		    cmp al, rus_letter_p_lower
 00000414  76 48		    jbe Text_Conv_First_Change_Lower_RUS
				    
 00000416  3C E0		    cmp al, rus_letter_r_lower
 00000418  72 74		    jb Text_Conv_First_Skip
 0000041A  EB 42		    jmp Text_Conv_First_Change_Lower_RUS


 0000041C			Text_Conv_First_Change_Upper_ENG:
 0000041C  B0 5A		    mov al, 'Z'
 0000041E  2A 03		    sub al, [ebx]      ;[ebx] = Z - [ebx] + A
 00000420  04 41		    add al, 'A'
 00000422  88 03		    mov [ebx], al
 00000424  EB 68		    jmp Text_Conv_First_Skip

 00000426			Text_Conv_First_Change_Lower_ENG:
 00000426  B0 7A		    mov al, 'z'
 00000428  2A 03		    sub al, [ebx]      ;[ebx] = z - [ebx] + a
 0000042A  04 61		    add al, 'a'
 0000042C  88 03		    mov [ebx], al
 0000042E  EB 5E		    jmp Text_Conv_First_Skip



 00000430			Text_Conv_First_Change_Upper_RUS:
 00000430  8A 03		    mov al, [ebx]
 00000432  3C F0		    cmp al, 240
 00000434  75 04		    jne F
 00000436  B0 99		    mov al, 153
 00000438  EB 54		    jmp Text_Conv_First_Skip
 0000043A			F:
 0000043A  3C 99		    cmp al, 153
 0000043C  75 04		    jne F1
 0000043E  B0 F0		    mov al, 240
 00000440  EB 4C		    jmp Text_Conv_First_Skip
 00000442			F1:
 00000442  3C 85		    cmp al, 133 ; —Å—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Å –ï
 00000444  77 02		    ja L  
 00000446  EB 0A		    jmp L2  
 00000448			L:
 00000448  3C 99		    cmp al, 153
 0000044A  77 06		    ja L2      
 0000044C			L1:
 0000044C  88 03		    mov [ebx], al
 0000044E  B0 9E		    mov al, rus_letter_ya_Upper - 1
 00000450  EB 04		    jmp Q
 00000452			L2:
 00000452  88 03		    mov [ebx], al
 00000454  B0 9F		    mov al, rus_letter_ya_Upper

 00000456			Q:
 00000456  2A 03		    sub al, [ebx]      ; [ebx] = –Ø - [ebx] + –ê
 00000458  04 80		    add al, rus_letter_A_Upper
 0000045A  88 03		    mov [ebx], al
 0000045C  EB 30		    jmp Text_Conv_First_Skip

 0000045E			Text_Conv_First_Change_Lower_RUS:
 0000045E  8A 03		    mov al, [ebx]
 00000460  3C F1		    cmp al, 241
 00000462  75 04		    jne M
 00000464  B0 E9		    mov al, 233
 00000466  EB 26		    jmp Text_Conv_First_Skip
 00000468			M:
 00000468  3C E9		    cmp al, 233
 0000046A  75 04		    jne M1
 0000046C  B0 F1		    mov al, 241
 0000046E  EB 1E		    jmp Text_Conv_First_Skip
 00000470			M1:
 00000470  3C A5		    cmp al, 165 ; —Å—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Å –µ
 00000472  77 02		    ja M2  
 00000474  EB 0C		    jmp K2 
 00000476			M2:
 00000476  3C EA		    cmp al, 234 ; —Å—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Å —ä
 00000478  73 08		    jae K2  
 0000047A  EB 00		    jmp K1 
				  
 0000047C			K1:
 0000047C  88 03		    mov [ebx], al
 0000047E  B0 FE		    mov al, 254
 00000480  EB 04		    jmp Y
 00000482			K2:
 00000482  88 03		    mov [ebx], al
 00000484  B0 FF		    mov al, 255

 00000486			Y:
 00000486  2A 03		    sub al, [ebx]      
 00000488  04 90		    add al, 144
 0000048A  88 03		    mov [ebx], al
 0000048C  EB 00		    jmp Text_Conv_First_Skip


 0000048E			Text_Conv_First_Skip:
 0000048E  43			    inc ebx
 0000048F  E9 FFFFFF30		    jmp Text_Conv_First_Start

 00000494			Text_Conv_First_End:
 00000494  5D			    pop ebp
 00000495  C2 0004		    ret 4

 00000498			Text_Conv_First endp

				;–ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞
				;2) —É–¥–≤–æ–∏—Ç—å –∑–∞–≥–ª–∞–≤–Ω—É—é –±—É–∫–≤—É
				;–ù–∞ –≤—Ö–æ–¥ –ø–æ–¥–∞—ë—Ç—Å—è –∞–¥—Ä–µ—Å –Ω–∞—á–∞–ª–∞ –º–∞—Å—Å–∏–≤–∞

 00000498			Text_Conv_Second proc

 00000498  55			        push ebp
 00000499  8B EC		        mov ebp, esp
 0000049B  50			        push eax
 0000049C  53			        push ebx
 0000049D  51			        push ecx
 0000049E  52			        push edx
 0000049F  56			        push esi

 000004A0  8B 5D 08		        mov ebx, [ebp + 8]
 000004A3  2B C0		        sub eax, eax
 000004A5  2B D2		        sub edx, edx

 000004A7			Text_Conv_Second_Count_Len:
 000004A7  2B C9		        sub ecx, ecx
 000004A9  8B 0B		        mov ecx, [ebx]
 000004AB  43			        inc ebx
 000004AC  80 F9 00		        cmp cl, 0 ; –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ —Å–∏–º–≤–æ–ª –∫–æ–Ω—Ü–∞ —Ç–µ–∫—Å—Ç–∞
 000004AF  74 04		        je Text_Conv_Second_Div
 000004B1  66| 40		        inc ax ;–¥–ª–∏–Ω–∞ –Ω–∞ –∞—Ö
 000004B3  75 F2		        jne Text_Conv_Second_Count_Len

 000004B5			Text_Conv_Second_Div:

 000004B5  66| 83 F8 01		        cmp ax, 1
 000004B9  74 26		        je Text_Conv_Second_End
 000004BB  83 EB 02		        sub ebx, 2
 000004BE  2B F6		        sub esi, esi
 000004C0  8B F3		        mov esi, ebx ;—Å–æ—Ö—Ä–∞–Ω—è–µ–º –∞–¥—Ä–µ—Å –∫–æ–Ω—Ü–∞ –º–∞—Å—Å–∏–≤–∞

 000004C2  2B C9		        sub ecx, ecx
 000004C4  66| B9 0002		        mov cx, 2
 000004C8  66| F7 F1		        div cx ;–¥–µ–ª–∏–º –Ω–∞ 2

 000004CB  2B C9		        sub ecx, ecx
 000004CD  66| 8B C8		        mov cx, ax ; –ø–æ–ª–æ–≤–∏–Ω–∞ –¥–ª–∏–Ω—ã –Ω–∞ —Å—Ö
 000004D0  8B 5D 08		        mov ebx, [ebp + 8] ;–∞–¥—Ä–µ—Å –Ω–∞—á–∞–ª–∞ –º–∞—Å—Å–∏–≤–∞

 000004D3			Text_Conv_Second_Make:

 000004D3  2B C0		        sub eax, eax
 000004D5  8A 23		        mov ah, byte ptr [ebx] ; ah = Array[ebx]
 000004D7  8A 06		        mov al, byte ptr [esi] ; al = Array[esi]
 000004D9  88 26		        mov byte ptr [esi], ah ; Array[esi] := ah
 000004DB  88 03		        mov byte ptr [ebx], al ; Array[ebx] = al
 000004DD  43			        inc ebx
 000004DE  4E			        dec esi

 000004DF  E2 F2		Loop Text_Conv_Second_Make

 000004E1			Text_Conv_Second_End:
 000004E1  5E			        pop esi
 000004E2  5A			        pop edx
 000004E3  59			        pop ecx
 000004E4  5B			        pop ebx
 000004E5  58			        pop eax
 000004E6  5D			        pop ebp
 000004E7  C2 0004		        ret 4

 000004EA			Text_Conv_Second endp

 000004EA			Start:

 000004EA			Input_First_Text:
				    outstr ' Text 1: '
 00000528  68 00000019 R	    push offset Arr_1
 0000052D  E8 FFFFFACE		    call Array_Input

 00000532  83 F8 00		    cmp eax, 0
 00000535  0F 84 0000095D	    je ProgramEndNotText

 0000053B  50			    push eax
 0000053C  66| 89 0D		    mov Arr_Len_1, cx
	   00000915 R
 00000543  66| FF 35		    push Arr_Len_1
	   00000915 R
 0000054A  68 00000019 R	    push offset Arr_1
 0000054F  E8 FFFFFE0F		    call Array_Count_Len
 00000554  66| A3		    mov Arr_Un_1, ax
	   00000919 R
 0000055A  58			    pop eax
 0000055B  83 F8 00		    cmp eax, 0
 0000055E  0F 85 000000AF	    jne Input_Second_Text
				    outstrln 'Not text, exit'
 0000060E  E9 0000092F		    jmp Program_End

 00000613			Input_Second_Text:
				    outstr ' Text 2: '
				    flush

 0000066E  33 C0		    xor eax, eax
 00000670  68 00000417 R	    push offset Arr_2
 00000675  E8 FFFFF986		    call Array_Input

 0000067A  83 F8 00		    cmp eax, 0
 0000067D  0F 84 00000815	    je ProgramEndNotText

 00000683  50			    push eax
 00000684  66| 89 0D		    mov Arr_Len_2, cx
	   00000917 R
 0000068B  66| FF 35		    push Arr_Len_2
	   00000917 R
 00000692  68 00000417 R	    push offset Arr_2
 00000697  E8 FFFFFCC7		    call Array_Count_Len
 0000069C  66| A3		    mov Arr_Un_2, ax
	   0000091B R
 000006A2  58			    pop eax
 000006A3  83 F8 00		    cmp eax, 0
 000006A6  0F 85 000000AF	    jne Conv_Case_1
				    outstrln 'Not text, exit'
 00000756  E9 000007E7		    jmp Program_End

 0000075B			Conv_Case_1:
 0000075B  33 C0		    xor eax, eax
 0000075D  66| A1		    mov ax, Arr_Un_1
	   00000919 R
 00000763  66| 3B 05		    cmp ax, Arr_Un_2
	   0000091B R
				    outstr ' Length 1 = '
				    outintln Arr_Un_1
				    outstr ' Length 2 = '
				    outintln Arr_Un_2
 000008FA  0F 82 00000217	    jb Conv_Case_2
				    outstrln ' First text is longer or they are equal'
				    outstrln ' Change letters to the symmetrical in first text'
				    outstrln ' Reverse second text'
				    
 00000AFE  68 00000019 R	    push offset Arr_1
 00000B03  E8 FFFFF8B6		    call Text_Conv_First
 00000B08  68 00000417 R	    push offset Arr_2
 00000B0D  E8 FFFFF986		    call Text_Conv_Second
				     
 00000B12  E9 00000214		    jmp Output
 00000B17			Conv_Case_2:
				    outstrln ' Second text is longer'
				    outstrln ' Reverse first text'
				    outstrln ' Change letters to the symmetrical in second text'
				    
 00000D15  68 00000019 R	    push offset Arr_1
 00000D1A  E8 FFFFF779		    call Text_Conv_Second
 00000D1F  68 00000417 R	    push offset Arr_2
 00000D24  E8 FFFFF695		    call Text_Conv_First
 00000D29  EB 00		    jmp Output

 00000D2B			Output:
				    outstrln ' First text after conversion'
 00000DD5  68 00000019 R	    push offset Arr_1
 00000DDA  E8 FFFFF33C		    call Array_Output

				    outstrln ' Second text after conversion'
 00000E89  68 00000417 R	    push offset Arr_2
 00000E8E  E8 FFFFF288		    call Array_Output
 00000E93  E9 000000AA		    jmp Program_End

 00000E98			ProgramEndNotText:
				    outstrln ' Error! Wrong Input'

 00000F42			Program_End:
				    exit

				end Start
Microsoft (R) Macro Assembler Version 6.14.8444		    04/28/21 18:48:52
a.asm							     Symbols 2 - 1




Macros:

                N a m e                 Type

??CheckStrToBuf  . . . . . . . .	Proc
??FindESP  . . . . . . . . . . .	Proc
??RestoreReg . . . . . . . . . .	Proc
??SaveReg  . . . . . . . . . . .	Proc
@GetCommandLine  . . . . . . . .	Func
@Random  . . . . . . . . . . . .	Func
@inchar  . . . . . . . . . . . .	Func
@inintln . . . . . . . . . . . .	Func
@inint . . . . . . . . . . . . .	Func
@readkey . . . . . . . . . . . .	Func
ChagePageAttr  . . . . . . . . .	Proc
ClrScr . . . . . . . . . . . . .	Proc
ConsoleMode  . . . . . . . . . .	Proc
ConsoleTitle . . . . . . . . . .	Proc
DOS  . . . . . . . . . . . . . .	Func
DownloadFile . . . . . . . . . .	Proc
GetConsoleTitle  . . . . . . . .	Proc
HeapBlockSize  . . . . . . . . .	Proc
InputStr . . . . . . . . . . . .	Proc
MsgBox . . . . . . . . . . . . .	Proc
NewConsole . . . . . . . . . . .	Proc
OpenFile . . . . . . . . . . . .	Proc
OutFlags . . . . . . . . . . . .	Proc
Randomize  . . . . . . . . . . .	Proc
RunExe . . . . . . . . . . . . .	Proc
SetScreenSize  . . . . . . . . .	Proc
SetTextAttr  . . . . . . . . . .	Proc
TotalHeapAllocated . . . . . . .	Proc
WhereX . . . . . . . . . . . . .	Proc
WhereY . . . . . . . . . . . . .	Proc
dispose  . . . . . . . . . . . .	Proc
exit . . . . . . . . . . . . . .	Proc
flush  . . . . . . . . . . . . .	Proc
gotoXY . . . . . . . . . . . . .	Proc
inchar . . . . . . . . . . . . .	Proc
inintln  . . . . . . . . . . . .	Proc
inint  . . . . . . . . . . . . .	Proc
newline  . . . . . . . . . . . .	Proc
new  . . . . . . . . . . . . . .	Proc
outcharln  . . . . . . . . . . .	Proc
outchar  . . . . . . . . . . . .	Proc
outdateln  . . . . . . . . . . .	Proc
outdate  . . . . . . . . . . . .	Proc
outintln . . . . . . . . . . . .	Proc
outint . . . . . . . . . . . . .	Proc
outnumln . . . . . . . . . . . .	Proc
outnum . . . . . . . . . . . . .	Proc
outstrln . . . . . . . . . . . .	Proc
outstr . . . . . . . . . . . . .	Proc
outtimeln  . . . . . . . . . . .	Proc
outtime  . . . . . . . . . . . .	Proc
outwordln  . . . . . . . . . . .	Proc
outword  . . . . . . . . . . . .	Proc
pause  . . . . . . . . . . . . .	Proc
readkey  . . . . . . . . . . . .	Proc


Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPosition . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  dwMaximumWindowSize  . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  x  . . . . . . . . . . . . . .	 00000000	 Word
  y  . . . . . . . . . . . . . .	 00000002	 Word
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SystemTime . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word


Types:

                N a m e                  Size     Attr

c_msvcrt . . . . . . . . . . . .	 00000004     CODE 


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 000018BA Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 00000F4E Para	  Public  'CODE'	


Procedures,  parameters and locals:

                N a m e                 Type     Value    Attr

Array_Count_Len  . . . . . . . .	P Near	 00000363 _TEXT	Length= 0000005B Public STDCALL
  Array_Count_Begin  . . . . . .	L Near	 00000373 _TEXT	
  Array_Count_Next . . . . . . .	L Near	 00000383 _TEXT	
  Array_Count_Symbols  . . . . .	L Near	 0000038D _TEXT	
  Array_Count_Check  . . . . . .	L Near	 00000398 _TEXT	
  Array_Count_Set_Zero . . . . .	L Near	 000003A3 _TEXT	
Array_Input  . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 0000011B Public STDCALL
  Array_Input_Begin  . . . . . .	L Near	 0000000E _TEXT	
  ??0002 . . . . . . . . . . . .	L Near	 00000019 _TEXT	
  Array_Input_Length_Check . . .	L Near	 0000003F _TEXT	
  Array_Input_First_Exit_Symbol 	L Near	 00000056 _TEXT	
  ??0005 . . . . . . . . . . . .	L Near	 00000061 _TEXT	
  Array_Input_Second_Exit_Symbol .	L Near	 00000096 _TEXT	
  ??0008 . . . . . . . . . . . .	L Near	 000000A1 _TEXT	
  Array_Input_Exit_Symbols . . .	L Near	 000000D4 _TEXT	
  Array_Input_Next . . . . . . .	L Near	 000000F1 _TEXT	
  Array_Input_Slash  . . . . . .	L Near	 000000FD _TEXT	
  Array_Input_Not_Text . . . . .	L Near	 00000110 _TEXT	
  Array_Input_Exit . . . . . . .	L Near	 00000115 _TEXT	
Array_Output . . . . . . . . . .	P Near	 0000011B _TEXT	Length= 00000248 Public STDCALL
  ??000E . . . . . . . . . . . .	L Near	 0000014C _TEXT	
  ??0017 . . . . . . . . . . . .	L Near	 0000017E _TEXT	
  ??0018 . . . . . . . . . . . .	L Near	 000001B4 _TEXT	
  Array_Output_Start . . . . . .	L Near	 000001CB _TEXT	
  Array_Output_Next  . . . . . .	L Near	 000001D6 _TEXT	
  ??0020 . . . . . . . . . . . .	L Near	 000001F7 _TEXT	
  ??0021 . . . . . . . . . . . .	L Near	 0000022D _TEXT	
  Array_Output_End . . . . . . .	L Near	 00000249 _TEXT	
  ??002A . . . . . . . . . . . .	L Near	 00000268 _TEXT	
  ??002B . . . . . . . . . . . .	L Near	 0000029E _TEXT	
  ??0031 . . . . . . . . . . . .	L Near	 000002E0 _TEXT	
  ??003A . . . . . . . . . . . .	L Near	 00000312 _TEXT	
  ??003B . . . . . . . . . . . .	L Near	 00000348 _TEXT	
CharToOemA . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ClearScreen  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetModuleHandleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemMetrics . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GlobalAlloc  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GlobalFree . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GlobalSize . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
InternetGetConnectedState  . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxIndirectA  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCtrlHandler  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StdIn  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StdOut . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Text_Conv_First  . . . . . . . .	P Near	 000003BE _TEXT	Length= 000000DA Public STDCALL
  Text_Conv_First_Start  . . . .	L Near	 000003C4 _TEXT	
  Text_Conv_First_Check1 . . . .	L Near	 000003E6 _TEXT	
  Text_Conv_First_Check2 . . . .	L Near	 000003F4 _TEXT	
  Text_Conv_First_Check3 . . . .	L Near	 00000412 _TEXT	
  Text_Conv_First_Change_Upper_ENG .	L Near	 0000041C _TEXT	
  Text_Conv_First_Change_Lower_ENG .	L Near	 00000426 _TEXT	
  Text_Conv_First_Change_Upper_RUS .	L Near	 00000430 _TEXT	
  F  . . . . . . . . . . . . . .	L Near	 0000043A _TEXT	
  F1 . . . . . . . . . . . . . .	L Near	 00000442 _TEXT	
  L  . . . . . . . . . . . . . .	L Near	 00000448 _TEXT	
  L1 . . . . . . . . . . . . . .	L Near	 0000044C _TEXT	
  L2 . . . . . . . . . . . . . .	L Near	 00000452 _TEXT	
  Q  . . . . . . . . . . . . . .	L Near	 00000456 _TEXT	
  Text_Conv_First_Change_Lower_RUS .	L Near	 0000045E _TEXT	
  M  . . . . . . . . . . . . . .	L Near	 00000468 _TEXT	
  M1 . . . . . . . . . . . . . .	L Near	 00000470 _TEXT	
  M2 . . . . . . . . . . . . . .	L Near	 00000476 _TEXT	
  K1 . . . . . . . . . . . . . .	L Near	 0000047C _TEXT	
  K2 . . . . . . . . . . . . . .	L Near	 00000482 _TEXT	
  Y  . . . . . . . . . . . . . .	L Near	 00000486 _TEXT	
  Text_Conv_First_Skip . . . . .	L Near	 0000048E _TEXT	
  Text_Conv_First_End  . . . . .	L Near	 00000494 _TEXT	
Text_Conv_Second . . . . . . . .	P Near	 00000498 _TEXT	Length= 00000052 Public STDCALL
  Text_Conv_Second_Count_Len . .	L Near	 000004A7 _TEXT	
  Text_Conv_Second_Div . . . . .	L Near	 000004B5 _TEXT	
  Text_Conv_Second_Make  . . . .	L Near	 000004D3 _TEXT	
  Text_Conv_Second_End . . . . .	L Near	 000004E1 _TEXT	
URLDownloadToFileA . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
VirtualProtect . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
nrandom  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
nseed  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
shell_ex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
shell  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
wait_key . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL


Symbols:

                N a m e                 Type     Value    Attr

??0000 . . . . . . . . . . . . .	Number	 00000001h   
??0001 . . . . . . . . . . . . .	Byte	 0000091D _DATA	
??0003 . . . . . . . . . . . . .	Number	 00000001h   
??0004 . . . . . . . . . . . . .	Byte	 0000091F _DATA	
??0006 . . . . . . . . . . . . .	Number	 00000001h   
??0007 . . . . . . . . . . . . .	Byte	 00000921 _DATA	
??0009 . . . . . . . . . . . . .	Byte	 00000928 _DATA	
??000A . . . . . . . . . . . . .	Byte	 00000924 _DATA	
??000B . . . . . . . . . . . . .	Text   	 "
??000C . . . . . . . . . . . . .	Byte	 00000923 _DATA	
??000F . . . . . . . . . . . . .	Byte	 0000092B _DATA	
??0010 . . . . . . . . . . . . .	Number	 00000000h   
??0011 . . . . . . . . . . . . .	Byte	 0000092E _DATA	
??0013 . . . . . . . . . . . . .	Byte	 000009F9 _DATA	
??0014 . . . . . . . . . . . . .	Byte	 00000931 _DATA	
??0015 . . . . . . . . . . . . .	Text   	 o
??0016 . . . . . . . . . . . . .	Byte	 00000930 _DATA	
??0019 . . . . . . . . . . . . .	Number	 00000001h   
??001A . . . . . . . . . . . . .	Byte	 000009FC _DATA	
??001C . . . . . . . . . . . . .	Byte	 00000AC7 _DATA	
??001D . . . . . . . . . . . . .	Byte	 000009FF _DATA	
??001E . . . . . . . . . . . . .	Text   	 o
??001F . . . . . . . . . . . . .	Byte	 000009FE _DATA	
??0022 . . . . . . . . . . . . .	Byte	 00000ACA _DATA	
??0023 . . . . . . . . . . . . .	Number	 00000000h   
??0024 . . . . . . . . . . . . .	Byte	 00000ACD _DATA	
??0026 . . . . . . . . . . . . .	Byte	 00000B98 _DATA	
??0027 . . . . . . . . . . . . .	Byte	 00000AD0 _DATA	
??0028 . . . . . . . . . . . . .	Text   	 o
??0029 . . . . . . . . . . . . .	Byte	 00000ACF _DATA	
??002C . . . . . . . . . . . . .	Byte	 00000BA0 _DATA	
??002D . . . . . . . . . . . . .	Byte	 00000B9C _DATA	
??002E . . . . . . . . . . . . .	Text   	 "
??002F . . . . . . . . . . . . .	Byte	 00000B9B _DATA	
??0032 . . . . . . . . . . . . .	Byte	 00000BA3 _DATA	
??0033 . . . . . . . . . . . . .	Number	 00000000h   
??0034 . . . . . . . . . . . . .	Byte	 00000BA6 _DATA	
??0036 . . . . . . . . . . . . .	Byte	 00000C71 _DATA	
??0037 . . . . . . . . . . . . .	Byte	 00000BA9 _DATA	
??0038 . . . . . . . . . . . . .	Text   	 o
??0039 . . . . . . . . . . . . .	Byte	 00000BA8 _DATA	
??003C . . . . . . . . . . . . .	Byte	 00000C7F _DATA	
??003D . . . . . . . . . . . . .	Byte	 00000C75 _DATA	
??003E . . . . . . . . . . . . .	Text   	 "
??003F . . . . . . . . . . . . .	Byte	 00000C74 _DATA	
??0041 . . . . . . . . . . . . .	L Near	 00000515 _TEXT	
??0042 . . . . . . . . . . . . .	Byte	 00000C92 _DATA	
??0043 . . . . . . . . . . . . .	Byte	 00000C83 _DATA	
??0044 . . . . . . . . . . . . .	Text   	 "
??0045 . . . . . . . . . . . . .	Byte	 00000C82 _DATA	
??0047 . . . . . . . . . . . . .	L Near	 0000058F _TEXT	
??0048 . . . . . . . . . . . . .	Byte	 00000C95 _DATA	
??0049 . . . . . . . . . . . . .	Number	 00000000h   
??004A . . . . . . . . . . . . .	Byte	 00000C98 _DATA	
??004C . . . . . . . . . . . . .	Byte	 00000D63 _DATA	
??004D . . . . . . . . . . . . .	Byte	 00000C9B _DATA	
??004E . . . . . . . . . . . . .	Text   	 o
??004F . . . . . . . . . . . . .	Byte	 00000C9A _DATA	
??0050 . . . . . . . . . . . . .	L Near	 000005C1 _TEXT	
??0051 . . . . . . . . . . . . .	L Near	 000005F7 _TEXT	
??0052 . . . . . . . . . . . . .	Byte	 00000D71 _DATA	
??0053 . . . . . . . . . . . . .	Byte	 00000D67 _DATA	
??0054 . . . . . . . . . . . . .	Text   	 "
??0055 . . . . . . . . . . . . .	Byte	 00000D66 _DATA	
??0057 . . . . . . . . . . . . .	L Near	 0000063E _TEXT	
??0058 . . . . . . . . . . . . .	Byte	 00000D74 _DATA	
??0059 . . . . . . . . . . . . .	L Near	 00000655 _TEXT	
??005A . . . . . . . . . . . . .	Byte	 00000D85 _DATA	
??005B . . . . . . . . . . . . .	Byte	 00000D76 _DATA	
??005C . . . . . . . . . . . . .	Text   	 "
??005D . . . . . . . . . . . . .	Byte	 00000D75 _DATA	
??005F . . . . . . . . . . . . .	L Near	 000006D7 _TEXT	
??0060 . . . . . . . . . . . . .	Byte	 00000D88 _DATA	
??0061 . . . . . . . . . . . . .	Number	 00000000h   
??0062 . . . . . . . . . . . . .	Byte	 00000D8B _DATA	
??0064 . . . . . . . . . . . . .	Byte	 00000E56 _DATA	
??0065 . . . . . . . . . . . . .	Byte	 00000D8E _DATA	
??0066 . . . . . . . . . . . . .	Text   	 o
??0067 . . . . . . . . . . . . .	Byte	 00000D8D _DATA	
??0068 . . . . . . . . . . . . .	L Near	 00000709 _TEXT	
??0069 . . . . . . . . . . . . .	L Near	 0000073F _TEXT	
??006A . . . . . . . . . . . . .	Byte	 00000E67 _DATA	
??006B . . . . . . . . . . . . .	Byte	 00000E5A _DATA	
??006C . . . . . . . . . . . . .	Text   	 "
??006D . . . . . . . . . . . . .	Byte	 00000E59 _DATA	
??006F . . . . . . . . . . . . .	L Near	 00000795 _TEXT	
??0070 . . . . . . . . . . . . .	Number	 00000006h   
??0071 . . . . . . . . . . . . .	Number	 00000007h   
??0072 . . . . . . . . . . . . .	Number	 00000000h   
??0073 . . . . . . . . . . . . .	Byte	 00000E6A _DATA	
??007B . . . . . . . . . . . . .	Number	 00000002h   
??007D . . . . . . . . . . . . .	Byte	 00000E6D _DATA	
??007E . . . . . . . . . . . . .	Number	 00000000h   
??007F . . . . . . . . . . . . .	Byte	 00000E70 _DATA	
??0081 . . . . . . . . . . . . .	Byte	 00000F3B _DATA	
??0082 . . . . . . . . . . . . .	Byte	 00000E73 _DATA	
??0083 . . . . . . . . . . . . .	Text   	 o
??0084 . . . . . . . . . . . . .	Byte	 00000E72 _DATA	
??0085 . . . . . . . . . . . . .	L Near	 000007E5 _TEXT	
??0086 . . . . . . . . . . . . .	L Near	 0000081B _TEXT	
??0087 . . . . . . . . . . . . .	Byte	 00000F4C _DATA	
??0088 . . . . . . . . . . . . .	Byte	 00000F3F _DATA	
??0089 . . . . . . . . . . . . .	Text   	 "
??008A . . . . . . . . . . . . .	Byte	 00000F3E _DATA	
??008C . . . . . . . . . . . . .	L Near	 0000085D _TEXT	
??008D . . . . . . . . . . . . .	Number	 00000006h   
??008E . . . . . . . . . . . . .	Number	 00000007h   
??008F . . . . . . . . . . . . .	Number	 00000000h   
??0090 . . . . . . . . . . . . .	Byte	 00000F4F _DATA	
??0098 . . . . . . . . . . . . .	Number	 00000002h   
??009A . . . . . . . . . . . . .	Byte	 00000F52 _DATA	
??009B . . . . . . . . . . . . .	Number	 00000000h   
??009C . . . . . . . . . . . . .	Byte	 00000F55 _DATA	
??009E . . . . . . . . . . . . .	Byte	 00001020 _DATA	
??009F . . . . . . . . . . . . .	Byte	 00000F58 _DATA	
??00A0 . . . . . . . . . . . . .	Text   	 o
??00A1 . . . . . . . . . . . . .	Byte	 00000F57 _DATA	
??00A2 . . . . . . . . . . . . .	L Near	 000008AD _TEXT	
??00A3 . . . . . . . . . . . . .	L Near	 000008E3 _TEXT	
??00A4 . . . . . . . . . . . . .	Byte	 0000104C _DATA	
??00A5 . . . . . . . . . . . . .	Byte	 00001024 _DATA	
??00A6 . . . . . . . . . . . . .	Text   	 "
??00A7 . . . . . . . . . . . . .	Byte	 00001023 _DATA	
??00A9 . . . . . . . . . . . . .	L Near	 0000092B _TEXT	
??00AA . . . . . . . . . . . . .	Byte	 0000104F _DATA	
??00AB . . . . . . . . . . . . .	Number	 00000000h   
??00AC . . . . . . . . . . . . .	Byte	 00001052 _DATA	
??00AE . . . . . . . . . . . . .	Byte	 0000111D _DATA	
??00AF . . . . . . . . . . . . .	Byte	 00001055 _DATA	
??00B0 . . . . . . . . . . . . .	Text   	 o
??00B1 . . . . . . . . . . . . .	Byte	 00001054 _DATA	
??00B2 . . . . . . . . . . . . .	L Near	 0000095D _TEXT	
??00B3 . . . . . . . . . . . . .	L Near	 00000993 _TEXT	
??00B4 . . . . . . . . . . . . .	Byte	 00001152 _DATA	
??00B5 . . . . . . . . . . . . .	Byte	 00001121 _DATA	
??00B6 . . . . . . . . . . . . .	Text   	 "
??00B7 . . . . . . . . . . . . .	Byte	 00001120 _DATA	
??00B9 . . . . . . . . . . . . .	L Near	 000009D5 _TEXT	
??00BA . . . . . . . . . . . . .	Byte	 00001155 _DATA	
??00BB . . . . . . . . . . . . .	Number	 00000000h   
??00BC . . . . . . . . . . . . .	Byte	 00001158 _DATA	
??00BE . . . . . . . . . . . . .	Byte	 00001223 _DATA	
??00BF . . . . . . . . . . . . .	Byte	 0000115B _DATA	
??00C0 . . . . . . . . . . . . .	Text   	 o
??00C1 . . . . . . . . . . . . .	Byte	 0000115A _DATA	
??00C2 . . . . . . . . . . . . .	L Near	 00000A07 _TEXT	
??00C3 . . . . . . . . . . . . .	L Near	 00000A3D _TEXT	
??00C4 . . . . . . . . . . . . .	Byte	 0000123C _DATA	
??00C5 . . . . . . . . . . . . .	Byte	 00001227 _DATA	
??00C6 . . . . . . . . . . . . .	Text   	 "
??00C7 . . . . . . . . . . . . .	Byte	 00001226 _DATA	
??00C9 . . . . . . . . . . . . .	L Near	 00000A7F _TEXT	
??00CA . . . . . . . . . . . . .	Byte	 0000123F _DATA	
??00CB . . . . . . . . . . . . .	Number	 00000000h   
??00CC . . . . . . . . . . . . .	Byte	 00001242 _DATA	
??00CE . . . . . . . . . . . . .	Byte	 0000130D _DATA	
??00CF . . . . . . . . . . . . .	Byte	 00001245 _DATA	
??00D0 . . . . . . . . . . . . .	Text   	 o
??00D1 . . . . . . . . . . . . .	Byte	 00001244 _DATA	
??00D2 . . . . . . . . . . . . .	L Near	 00000AB1 _TEXT	
??00D3 . . . . . . . . . . . . .	L Near	 00000AE7 _TEXT	
??00D4 . . . . . . . . . . . . .	Byte	 00001328 _DATA	
??00D5 . . . . . . . . . . . . .	Byte	 00001311 _DATA	
??00D6 . . . . . . . . . . . . .	Text   	 "
??00D7 . . . . . . . . . . . . .	Byte	 00001310 _DATA	
??00D9 . . . . . . . . . . . . .	L Near	 00000B42 _TEXT	
??00DA . . . . . . . . . . . . .	Byte	 0000132B _DATA	
??00DB . . . . . . . . . . . . .	Number	 00000000h   
??00DC . . . . . . . . . . . . .	Byte	 0000132E _DATA	
??00DE . . . . . . . . . . . . .	Byte	 000013F9 _DATA	
??00DF . . . . . . . . . . . . .	Byte	 00001331 _DATA	
??00E0 . . . . . . . . . . . . .	Text   	 o
??00E1 . . . . . . . . . . . . .	Byte	 00001330 _DATA	
??00E2 . . . . . . . . . . . . .	L Near	 00000B74 _TEXT	
??00E3 . . . . . . . . . . . . .	L Near	 00000BAA _TEXT	
??00E4 . . . . . . . . . . . . .	Byte	 00001411 _DATA	
??00E5 . . . . . . . . . . . . .	Byte	 000013FD _DATA	
??00E6 . . . . . . . . . . . . .	Text   	 "
??00E7 . . . . . . . . . . . . .	Byte	 000013FC _DATA	
??00E9 . . . . . . . . . . . . .	L Near	 00000BEC _TEXT	
??00EA . . . . . . . . . . . . .	Byte	 00001414 _DATA	
??00EB . . . . . . . . . . . . .	Number	 00000000h   
??00EC . . . . . . . . . . . . .	Byte	 00001417 _DATA	
??00EE . . . . . . . . . . . . .	Byte	 000014E2 _DATA	
??00EF . . . . . . . . . . . . .	Byte	 0000141A _DATA	
??00F0 . . . . . . . . . . . . .	Text   	 o
??00F1 . . . . . . . . . . . . .	Byte	 00001419 _DATA	
??00F2 . . . . . . . . . . . . .	L Near	 00000C1E _TEXT	
??00F3 . . . . . . . . . . . . .	L Near	 00000C54 _TEXT	
??00F4 . . . . . . . . . . . . .	Byte	 00001518 _DATA	
??00F5 . . . . . . . . . . . . .	Byte	 000014E6 _DATA	
??00F6 . . . . . . . . . . . . .	Text   	 "
??00F7 . . . . . . . . . . . . .	Byte	 000014E5 _DATA	
??00F9 . . . . . . . . . . . . .	L Near	 00000C96 _TEXT	
??00FA . . . . . . . . . . . . .	Byte	 0000151B _DATA	
??00FB . . . . . . . . . . . . .	Number	 00000000h   
??00FC . . . . . . . . . . . . .	Byte	 0000151E _DATA	
??00FE . . . . . . . . . . . . .	Byte	 000015E9 _DATA	
??00FF . . . . . . . . . . . . .	Byte	 00001521 _DATA	
??0100 . . . . . . . . . . . . .	Text   	 o
??0101 . . . . . . . . . . . . .	Byte	 00001520 _DATA	
??0102 . . . . . . . . . . . . .	L Near	 00000CC8 _TEXT	
??0103 . . . . . . . . . . . . .	L Near	 00000CFE _TEXT	
??0104 . . . . . . . . . . . . .	Byte	 0000160A _DATA	
??0105 . . . . . . . . . . . . .	Byte	 000015ED _DATA	
??0106 . . . . . . . . . . . . .	Text   	 "
??0107 . . . . . . . . . . . . .	Byte	 000015EC _DATA	
??0109 . . . . . . . . . . . . .	L Near	 00000D56 _TEXT	
??010A . . . . . . . . . . . . .	Byte	 0000160D _DATA	
??010B . . . . . . . . . . . . .	Number	 00000000h   
??010C . . . . . . . . . . . . .	Byte	 00001610 _DATA	
??010E . . . . . . . . . . . . .	Byte	 000016DB _DATA	
??010F . . . . . . . . . . . . .	Byte	 00001613 _DATA	
??0110 . . . . . . . . . . . . .	Text   	 o
??0111 . . . . . . . . . . . . .	Byte	 00001612 _DATA	
??0112 . . . . . . . . . . . . .	L Near	 00000D88 _TEXT	
??0113 . . . . . . . . . . . . .	L Near	 00000DBE _TEXT	
??0114 . . . . . . . . . . . . .	Byte	 000016FD _DATA	
??0115 . . . . . . . . . . . . .	Byte	 000016DF _DATA	
??0116 . . . . . . . . . . . . .	Text   	 "
??0117 . . . . . . . . . . . . .	Byte	 000016DE _DATA	
??0119 . . . . . . . . . . . . .	L Near	 00000E0A _TEXT	
??011A . . . . . . . . . . . . .	Byte	 00001700 _DATA	
??011B . . . . . . . . . . . . .	Number	 00000000h   
??011C . . . . . . . . . . . . .	Byte	 00001703 _DATA	
??011E . . . . . . . . . . . . .	Byte	 000017CE _DATA	
??011F . . . . . . . . . . . . .	Byte	 00001706 _DATA	
??0120 . . . . . . . . . . . . .	Text   	 o
??0121 . . . . . . . . . . . . .	Byte	 00001705 _DATA	
??0122 . . . . . . . . . . . . .	L Near	 00000E3C _TEXT	
??0123 . . . . . . . . . . . . .	L Near	 00000E72 _TEXT	
??0124 . . . . . . . . . . . . .	Byte	 000017E6 _DATA	
??0125 . . . . . . . . . . . . .	Byte	 000017D2 _DATA	
??0126 . . . . . . . . . . . . .	Text   	 "
??0127 . . . . . . . . . . . . .	Byte	 000017D1 _DATA	
??0129 . . . . . . . . . . . . .	L Near	 00000EC3 _TEXT	
??012A . . . . . . . . . . . . .	Byte	 000017E9 _DATA	
??012B . . . . . . . . . . . . .	Number	 00000000h   
??012C . . . . . . . . . . . . .	Byte	 000017EC _DATA	
??012E . . . . . . . . . . . . .	Byte	 000018B7 _DATA	
??012F . . . . . . . . . . . . .	Byte	 000017EF _DATA	
??0130 . . . . . . . . . . . . .	Text   	 o
??0131 . . . . . . . . . . . . .	Byte	 000017EE _DATA	
??0132 . . . . . . . . . . . . .	L Near	 00000EF5 _TEXT	
??0133 . . . . . . . . . . . . .	L Near	 00000F2B _TEXT	
??CommonHeapElemSize . . . . . .	DWord	 00000004 _DATA	
??ConsoleMode  . . . . . . . . .	Byte	 00000008 _DATA	
??TotalHeapAllocated . . . . . .	DWord	 00000000 _DATA	
??sTime  . . . . . . . . . . . .	SystemTime  00000009 _DATA	
@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DOS . . . . . . . . . . . . . .	Text   	 DOS
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@INCHAR  . . . . . . . . . . . .	Text   	 @inchar
@ININTLN . . . . . . . . . . . .	Text   	 @inintln
@ININT . . . . . . . . . . . . .	Text   	 @inint
@InChar  . . . . . . . . . . . .	Text   	 @inchar
@InInt . . . . . . . . . . . . .	Text   	 @inint
@Inchar  . . . . . . . . . . . .	Text   	 @inchar
@InintLn . . . . . . . . . . . .	Text   	 @inintln
@Inintln . . . . . . . . . . . .	Text   	 @inintln
@Inint . . . . . . . . . . . . .	Text   	 @inint
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@READKEY . . . . . . . . . . . .	Text   	 @readkey
@ReadKey . . . . . . . . . . . .	Text   	 @readkey
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@dos . . . . . . . . . . . . . .	Text   	 DOS
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@random  . . . . . . . . . . . .	Text   	 @Random
@stack . . . . . . . . . . . . .	Text   	 FLAT
AllocConsole@0 . . . . . . . . .	L Near	 00000000 FLAT	External STDCALL
Arr_1  . . . . . . . . . . . . .	Byte	 00000019 _DATA	
Arr_2  . . . . . . . . . . . . .	Byte	 00000417 _DATA	
Arr_Len_1  . . . . . . . . . . .	Word	 00000915 _DATA	
Arr_Len_2  . . . . . . . . . . .	Word	 00000917 _DATA	
Arr_Un_1 . . . . . . . . . . . .	Word	 00000919 _DATA	
Arr_Un_2 . . . . . . . . . . . .	Word	 0000091B _DATA	
Arr_U  . . . . . . . . . . . . .	Byte	 00000815 _DATA	
Black  . . . . . . . . . . . . .	Number	 00000000h   
Blue . . . . . . . . . . . . . .	Number	 00000001h   
Bright . . . . . . . . . . . . .	Number	 00000008h   
Brown  . . . . . . . . . . . . .	Number	 00000006h   
CLRSCR . . . . . . . . . . . . .	Text   	 ClrScr
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CharToOem  . . . . . . . . . . .	Text   	 CharToOemA
Cls  . . . . . . . . . . . . . .	Text   	 ClrScr
Conv_Case_1  . . . . . . . . . .	L Near	 0000075B _TEXT	
Conv_Case_2  . . . . . . . . . .	L Near	 00000B17 _TEXT	
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
Cyan . . . . . . . . . . . . . .	Number	 00000003h   
DISPOSE  . . . . . . . . . . . .	Text   	 dispose
DarkGray . . . . . . . . . . . .	Number	 00000008h   
Dispose  . . . . . . . . . . . .	Text   	 dispose
EXIT . . . . . . . . . . . . . .	Text   	 exit
Exit . . . . . . . . . . . . . .	Text   	 exit
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FLUSH  . . . . . . . . . . . . .	Text   	 flush
Flush  . . . . . . . . . . . . .	Text   	 flush
FreeConsole@0  . . . . . . . . .	L Near	 00000000 FLAT	External STDCALL
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GMEM_FIXED . . . . . . . . . . .	Number	 00000000h   
GMEM_ZEROINIT  . . . . . . . . .	Number	 00000040h   
GOTOXY . . . . . . . . . . . . .	Text   	 gotoXY
GetModuleHandle  . . . . . . . .	Text   	 GetModuleHandleA
GotoXY . . . . . . . . . . . . .	Text   	 gotoXY
Green  . . . . . . . . . . . . .	Number	 00000002h   
IDABORT  . . . . . . . . . . . .	Number	 00000003h   
IDCANCEL . . . . . . . . . . . .	Number	 00000002h   
IDIGNORE . . . . . . . . . . . .	Number	 00000005h   
IDNO . . . . . . . . . . . . . .	Number	 00000007h   
IDOK . . . . . . . . . . . . . .	Number	 00000001h   
IDRETRY  . . . . . . . . . . . .	Number	 00000004h   
IDYES  . . . . . . . . . . . . .	Number	 00000006h   
INCHAR . . . . . . . . . . . . .	Text   	 inchar
ININTLN  . . . . . . . . . . . .	Text   	 inintln
ININT  . . . . . . . . . . . . .	Text   	 inint
INPUTSTR . . . . . . . . . . . .	Text   	 InputStr
InChar . . . . . . . . . . . . .	Text   	 inchar
InInt  . . . . . . . . . . . . .	Text   	 inint
Inchar . . . . . . . . . . . . .	Text   	 inchar
InintLn  . . . . . . . . . . . .	Text   	 inintln
Inintln  . . . . . . . . . . . .	Text   	 inintln
Inint  . . . . . . . . . . . . .	Text   	 inint
Input_First_Text . . . . . . . .	L Near	 000004EA _TEXT	
Input_Second_Text  . . . . . . .	L Near	 00000613 _TEXT	
LANG_NEUTRAL . . . . . . . . . .	Number	 00000000h   
LightBlue  . . . . . . . . . . .	Number	 00000009h   
LightGray  . . . . . . . . . . .	Number	 00000007h   
LightGreen . . . . . . . . . . .	Number	 0000000Ah   
LightMagenta . . . . . . . . . .	Number	 0000000Dh   
LightRed . . . . . . . . . . . .	Number	 0000000Ch   
MB_ABORTRETRYIGNORE  . . . . . .	Number	 00000002h   
MB_CANCELTRYCONTINUE . . . . . .	Number	 00000006h   
MB_DEFBUTTON1  . . . . . . . . .	Number	 00000000h   
MB_DEFBUTTON2  . . . . . . . . .	Number	 00000100h   
MB_DEFBUTTON3  . . . . . . . . .	Number	 00000200h   
MB_DEFBUTTON4  . . . . . . . . .	Number	 00000300h   
MB_HELP  . . . . . . . . . . . .	Number	 00004000h   
MB_ICONASTERISK  . . . . . . . .	Number	 00000040h   
MB_ICONEXCLAMATION . . . . . . .	Number	 00000030h   
MB_ICONHAND  . . . . . . . . . .	Number	 00000008h   
MB_ICONQUESTION  . . . . . . . .	Number	 00000020h   
MB_ICONSTOP  . . . . . . . . . .	Number	 00000010h   
MB_OKCANCEL  . . . . . . . . . .	Number	 00000001h   
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
MB_RETRYCANCEL . . . . . . . . .	Number	 00000005h   
MB_RIGHT . . . . . . . . . . . .	Number	 00080000h   
MB_SYSTEMMODAL . . . . . . . . .	Number	 00001000h   
MB_USERICON  . . . . . . . . . .	Number	 00000080h   
MB_YESNOCANCEL . . . . . . . . .	Number	 00000003h   
MB_YESNO . . . . . . . . . . . .	Number	 00000004h   
MSGBOX . . . . . . . . . . . . .	Text   	 MsgBox
Magenta  . . . . . . . . . . . .	Number	 00000005h   
Max_Len  . . . . . . . . . . . .	Number	 000001FFh   
MessageBoxIndirect . . . . . . .	Text   	 MessageBoxIndirectA
MessageBox . . . . . . . . . . .	Text   	 MessageBoxA
NEWLINE  . . . . . . . . . . . .	Text   	 newline
NEW  . . . . . . . . . . . . . .	Text   	 new
NULL . . . . . . . . . . . . . .	Number	 00000000h   
NewLine  . . . . . . . . . . . .	Text   	 newline
Newline  . . . . . . . . . . . .	Text   	 newline
New  . . . . . . . . . . . . . .	Text   	 new
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
OUTCHARLN  . . . . . . . . . . .	Text   	 outcharln
OUTCHAR  . . . . . . . . . . . .	Text   	 outchar
OUTCH  . . . . . . . . . . . . .	Text   	 outchar
OUTCLN . . . . . . . . . . . . .	Text   	 outcharln
OUTDATELN  . . . . . . . . . . .	Text   	 outdateln
OUTDATE  . . . . . . . . . . . .	Text   	 outdate
OUTINTLN . . . . . . . . . . . .	Text   	 outintln
OUTINT . . . . . . . . . . . . .	Text   	 outint
OUTI . . . . . . . . . . . . . .	Text   	 outint
OUTSTRLN . . . . . . . . . . . .	Text   	 outstrln
OUTSTR . . . . . . . . . . . . .	Text   	 outstr
OUTTIMELN  . . . . . . . . . . .	Text   	 outtimeln
OUTTIME  . . . . . . . . . . . .	Text   	 outtime
OUTU . . . . . . . . . . . . . .	Text   	 outword
OUTWORDLN  . . . . . . . . . . .	Text   	 outwordln
OUTWORD  . . . . . . . . . . . .	Text   	 outword
OutCharLn  . . . . . . . . . . .	Text   	 outcharln
OutCharln  . . . . . . . . . . .	Text   	 outcharln
OutChar  . . . . . . . . . . . .	Text   	 outchar
OutDateLn  . . . . . . . . . . .	Text   	 outdateln
OutDateln  . . . . . . . . . . .	Text   	 outdateln
OutDate  . . . . . . . . . . . .	Text   	 outdate
OutILn . . . . . . . . . . . . .	Text   	 outintln
OutIln . . . . . . . . . . . . .	Text   	 outintln
OutIntLn . . . . . . . . . . . .	Text   	 outintln
OutInt . . . . . . . . . . . . .	Text   	 outint
OutI . . . . . . . . . . . . . .	Text   	 outint
OutNumLn . . . . . . . . . . . .	Text   	 outnumln
OutNumln . . . . . . . . . . . .	Text   	 outnumln
OutNum . . . . . . . . . . . . .	Text   	 outnum
OutStrLn . . . . . . . . . . . .	Text   	 outstrln
OutStr . . . . . . . . . . . . .	Text   	 outstr
OutTimeLn  . . . . . . . . . . .	Text   	 outtimeln
OutTimeln  . . . . . . . . . . .	Text   	 outtimeln
OutTime  . . . . . . . . . . . .	Text   	 outtime
OutULn . . . . . . . . . . . . .	Text   	 outwordln
OutUln . . . . . . . . . . . . .	Text   	 outwordln
OutUnsignedLn  . . . . . . . . .	Text   	 outwordln
OutUnsignedln  . . . . . . . . .	Text   	 outwordln
OutUnsigned  . . . . . . . . . .	Text   	 outword
OutU . . . . . . . . . . . . . .	Text   	 outword
OutWordLn  . . . . . . . . . . .	Text   	 outwordln
OutWord  . . . . . . . . . . . .	Text   	 outword
OutintLn . . . . . . . . . . . .	Text   	 outintln
Outintln . . . . . . . . . . . .	Text   	 outintln
Outint . . . . . . . . . . . . .	Text   	 outint
Output . . . . . . . . . . . . .	L Near	 00000D2B _TEXT	
OutstrLn . . . . . . . . . . . .	Text   	 outstrln
OutwordLn  . . . . . . . . . . .	Text   	 outwordln
Outword  . . . . . . . . . . . .	Text   	 outword
PAGE_EXECUTE_READWRITE . . . . .	Number	 00000040h   
PAGE_EXECUTE_READ  . . . . . . .	Number	 00000020h   
PAGE_EXECUTE_WRITECOPY . . . . .	Number	 00000080h   
PAGE_EXECUTE . . . . . . . . . .	Number	 00000010h   
PAGE_NOACCESS  . . . . . . . . .	Number	 00000001h   
PAGE_READONLY  . . . . . . . . .	Number	 00000002h   
PAGE_READWRITE . . . . . . . . .	Number	 00000004h   
PAGE_WRITECOPY . . . . . . . . .	Number	 00000008h   
PAUSE  . . . . . . . . . . . . .	Text   	 pause
Pause  . . . . . . . . . . . . .	Text   	 pause
ProgramEndNotText  . . . . . . .	L Near	 00000E98 _TEXT	
Program_End  . . . . . . . . . .	L Near	 00000F42 _TEXT	
READKEY  . . . . . . . . . . . .	Text   	 readkey
ReadKey  . . . . . . . . . . . .	Text   	 readkey
Red  . . . . . . . . . . . . . .	Number	 00000004h   
STD_ERROR_HANDLE . . . . . . . .	Number	 -0000000Ch   
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
Start  . . . . . . . . . . . . .	L Near	 000004EA _TEXT	Public STDCALL
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
URLDownloadToFile  . . . . . . .	Text   	 URLDownloadToFileA
White  . . . . . . . . . . . . .	Number	 0000000Fh   
Yellow . . . . . . . . . . . . .	Number	 0000000Eh   
_imp___exit  . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__printf . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__sprintf  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
bright . . . . . . . . . . . . .	Number	 00000008h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
clrscr . . . . . . . . . . . . .	Text   	 ClrScr
crt__exit  . . . . . . . . . . .	Text   	 _imp___exit
crt_printf . . . . . . . . . . .	Text   	 _imp__printf
crt_sprintf  . . . . . . . . . .	Text   	 _imp__sprintf
cyan . . . . . . . . . . . . . .	Number	 00000003h   
darkgray . . . . . . . . . . . .	Number	 00000008h   
dos  . . . . . . . . . . . . . .	Text   	 DOS
downloadfile . . . . . . . . . .	Text   	 DownloadFile
gotoxy . . . . . . . . . . . . .	Text   	 gotoXY
green  . . . . . . . . . . . . .	Number	 00000002h   
heapblocksize  . . . . . . . . .	Text   	 HeapBlockSize
inint_proc@0 . . . . . . . . . .	L Near	 00000000 FLAT	External STDCALL
inputstr . . . . . . . . . . . .	Text   	 InputStr
lightblue  . . . . . . . . . . .	Number	 00000009h   
lightgray  . . . . . . . . . . .	Number	 00000007h   
lightgreen . . . . . . . . . . .	Number	 0000000Ah   
lightmagenta . . . . . . . . . .	Number	 0000000Dh   
lightred . . . . . . . . . . . .	Number	 0000000Ch   
magenta  . . . . . . . . . . . .	Number	 00000005h   
msgbox . . . . . . . . . . . . .	Text   	 MsgBox
nil  . . . . . . . . . . . . . .	DWord 	 00000000h   
outch  . . . . . . . . . . . . .	Text   	 outchar
outintLn . . . . . . . . . . . .	Text   	 outintln
outi . . . . . . . . . . . . . .	Text   	 outint
outu . . . . . . . . . . . . . .	Text   	 outword
outwordLn  . . . . . . . . . . .	Text   	 outwordln
randomize  . . . . . . . . . . .	Text   	 Randomize
red  . . . . . . . . . . . . . .	Number	 00000004h   
rus_letter_A_Upper . . . . . . .	Number	 00000080h   
rus_letter_p_lower . . . . . . .	Number	 000000AFh   
rus_letter_r_lower . . . . . . .	Number	 000000E0h   
rus_letter_shc_Upper . . . . . .	Number	 00000099h   
rus_letter_ya_Upper  . . . . . .	Number	 0000009Fh   
rus_letter_ye_Upper  . . . . . .	Number	 00000085h   
rus_letter_yo_Upper  . . . . . .	Number	 000000F0h   
rus_letter_yo_lower  . . . . . .	Number	 000000F1h   
settextattr  . . . . . . . . . .	Text   	 SetTextAttr
whereX . . . . . . . . . . . . .	Text   	 WhereX
whereY . . . . . . . . . . . . .	Text   	 WhereY
wherex . . . . . . . . . . . . .	Text   	 WhereX
wherey . . . . . . . . . . . . .	Text   	 WhereY
white  . . . . . . . . . . . . .	Number	 0000000Fh   
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   0 Warnings
	   0 Errors
